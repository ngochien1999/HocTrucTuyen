@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<head>

</head>
<body style="padding-left:150px; padding-right:150px">
    <div class="et_post_meta_wrapper"><h1 class="entry-title" style="text-align:center;padding-top:60px">Tự học hiệu quả với tài liệu lập trình giao diện Swing trong Java</h1><p class="post-meta"><span class="published">Apr 9, 2021</span> | <a href="https://codegym.vn/category/blog/" rel="category tag">Blog</a> | <span class="comments-number"><a href="https://codegym.vn/blog/2021/04/09/tai-lieu-lap-trinh-giao-dien-swing-trong-java/#respond">0 comments</a></span></p></div>
    <p style="text-align: justify"><strong>Java Swing</strong>&nbsp;là một phần của&nbsp;<strong>Java Foundation Classes (JFC)</strong> được sử dụng để tạo các ứng dụng Window-Based. Nó được xây dựng ở trên cùng của AWT (Abstract Windowing Toolkit) API và được viết hoàn toàn bằng Java. Nếu bạn đang tìm kiếm tài liệu để làm quen với Java Swing thì tài liệu này rất phù hợp với bạn. Tại bài viết dưới đây, hãy cùng tìm hiểu một vài thông tin cơ bản về Swing trong Java và cuốn tài liệu lập trình giao diện Swing trong Java nhé.</p>
    <img src="~/Asset/images/java.jpg" src="~/Asset/images/aa.jpg" src="~/Asset/images/3.jpg" /  style="    text-align: center;
        width: 500px;
        height: 300px;
        margin-left:300px"  />
    <p style="text-align: justify">Swing <a href="https://vi.wikipedia.org/wiki/Giao_di%E1%BB%87n_l%E1%BA%ADp_tr%C3%ACnh_%E1%BB%A9ng_d%E1%BB%A5ng" target="_blank" rel="noopener">API</a> là một tập hợp các thành phần GUI mở rộng để giảm bớt gánh nặng của nhà phát triển để tạo các giao diện người dùng dựa trên Java. Thành phần Swing theo kiến ​​trúc Model-View-Controller đáp ứng các tiêu chí sau:</p>
    <ul style="text-align: justify"><li>Một API duy nhất là đủ để hỗ trợ nhiều giao diện.</li><li>API được định hướng theo mô hình sao cho API cấp cao nhất không bắt buộc phải có dữ liệu.</li><li>API sử dụng mô hình Java Bean để Builder Tools và IDE có thể cung cấp các dịch vụ tốt hơn cho các nhà phát triển để sử dụng.</li></ul>
    <h2 style="text-align: justify"><span id="Tinh_nang_cua_Swing_trong_Java">Tính năng của Swing trong Java</span></h2>
    <ul style="text-align: justify"><li>Trọng lượng nhẹ – Các thành phần Swing độc lập với API của hệ điều hành gốc do các điều khiển API Swing được kết xuất chủ yếu bằng cách sử dụng mã Java thuần túy thay vì các cuộc gọi hệ điều hành cơ bản.</li><li>Rich Controls – Swing cung cấp một bộ điều khiển nâng cao phong phú như Tree, TabbedPane, thanh trượt, colorpicker và điều khiển bảng.</li><li>Tùy biến cao – các điều khiển xoay có thể được tùy chỉnh theo một cách rất dễ dàng và độc lập với biểu diễn bên trong.</li><li>Pluggable look-and-feel – Swing dựa nhìn GUI Application và có thể thay đổi thời gian chạy, dựa trên các giá trị có sẵn.</li></ul>
    <h2 style="text-align: justify"><span id="Tai_lieu_lap_trinh_giao_dien_Swing_trong_Java">Tài liệu lập trình giao diện Swing trong Java</span></h2>
    <p>Nội dung chính của cuốn tài liệu bao gồm:</p>
    <p style="text-align: justify"><strong>Giới thiệu giao diện đồ họa người dùng (Introduce GUI)</strong></p>
    <ul style="text-align: justify"><li>Giới thiệu AWT và Swing</li><li>Xây dựng Java Gui cơ bản</li><li>Cơ chế kiểm soát sự kiện người dùng</li></ul>
    <p style="text-align: justify"><strong>Bộ chứa giao diện đồ họa người dùng (GUI containers)</strong></p>
    <ul style="text-align: justify"><li>Tìm hiểu JPanel</li><li>Tìm hiểu JFrame</li><li>Tìm hiểu JWindow</li><li>Tìm hiểu JScrollPane</li><li>Tìm hiểu JTabbedPane</li></ul>
    <p style="text-align: justify"><strong>Thành phần giao diện đồ họa người dùng (GUI Components)</strong></p>
    <ul style="text-align: justify"><li>Các thành phần GUI Swing (các thành phần, các bộ chứa, lớp JComponent)</li><li>Các thành phần GUI cơ bản (JButton, JToggleButton, JRadioButton, JCheckBox, JColorChooser, JLabel, JTextField, JTextArea, JList, JComboBox, JPopupMenu, JToolBar)</li></ul>
    <p style="text-align: justify"><strong>Quản lý bố cục giao diện đồ họa người dùng (GUI Layout Manager)</strong></p>
    <ul style="text-align: justify"><li>BorderLayout là gì? Ví dụ sử dụng&nbsp;BorderLayout.</li><li>BoxLayout là gì? Ví dụ sử dụng&nbsp;BoxrLayout.</li><li>CardLayout là gì? Ví dụ sử dụng&nbsp;CardLayout.</li><li>FlowLayout là gì? Ví dụ sử dụng&nbsp;FlowLayout.</li><li>GridLayout là gì? Ví dụ sử dụng&nbsp;GridLayout.</li><li>GridBagLayout là gì? Ví dụ sử dụng&nbsp;GridBagLayout.</li></ul>
    <h2 style="text-align: justify"><span id="Ket_luan"><span id="Ket_luan">Kết luận</span></span></h2>
    <p style="text-align: justify">Như vậy,&nbsp;<a href="https://codegym.vn/" target="_blank" rel="noopener"><strong></strong></a> đã giới thiệu đến bạn tài liệu lập trình giao diện Swing trong Java. Bộ tài liệu này hoàn toàn miễn phí dành cho những bạn nào đang mới bắt đầu theo đuổi đam mê lập trình muốn tìm hiểu về ngôn ngữ lập trình Java. Cảm ơn bạn đã lắng nghe bài viết của chúng tôi ở đây. Chúc bạn may mắn và quan trọng nhất là học một cách thật vui vẻ!</p>
</body>
</html>

